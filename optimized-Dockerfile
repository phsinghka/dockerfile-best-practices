# Step 1: Use a smaller base image for the final stage
FROM node:16 AS builder

# Step 2: Set working directory
WORKDIR /app

# Step 3: Copy only package.json first for dependency installation (leverages Docker layer caching)
COPY package*.json ./

# Step 4: Install dependencies
RUN npm install

# Step 5: Copy the rest of the application code
COPY . .

# Step 6: Build the application (if you have a build step, add it here)
RUN npm run build

# Step 7: Use a minimal base image for production
FROM node:16-alpine

# Step 8: Set working directory in the final image
WORKDIR /app

# Step 9: Copy over only the essential files from the build stage
COPY --from=builder /app .

# Step 10: Create a non-root user
RUN addgroup -S appgroup && adduser -S appuser -G appgroup

# Step 11: Change ownership of the application files
RUN chown -R appuser:appgroup /app

# Step 12: Run the application as the non-root user
USER appuser

# Step 13: Set environment variables
ENV NODE_ENV=production

# Step 14: Expose the necessary port
EXPOSE 3000

# Step 15: Use CMD to run the application
CMD ["npm", "start"]

